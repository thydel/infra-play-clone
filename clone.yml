#!/usr/bin/env ansible-playbook
---

- name: &check Check ansible version
  hosts: all
  gather_facts: False
  tags: check-version
  vars: { min_ansible_version: 2.3.0 }
  tasks:
    - fail:
        msg: min ansible version is {{ min_ansible_version }}, ansible version is {{ ansible_version.string }}
      when: ansible_version.string | version_compare(min_ansible_version, 'lt')
      check_mode: False
      run_once: True
      delegate_to: localhost
      tags: always
      name: *check

- name: Clone a VM and basic renaming steps
  hosts: &hosts tst5:satscva1:satscvb1:prephp7a1:profntd1:presqldmpa1:prosqldmpa1:prostrb1
  gather_facts: False
  tags: clone

  vars_files:
    - vars/passwords.yml
    - vars/ext/legacy/oxa_vcenter.yml
    - vars/ext/legacy/oxa_networks.yml
    - vars/ext/clones.json

  vars:
    clone: '{{ oxa_clones[inventory_hostname] }}'

  roles:
    - role: clone

      validate_certs: False
      password: '{{ vcenter_password }}'

      template_name:     '{{ clone.template }}'
      template_hostname: '{{ template_name.split(".")[0] }}'

      vm_memory_mb: '{{ clone.memory }}'
      vm_num_cpus:  '{{ clone.cpus }}'

      pysphere: '{{ clone.pysphere }}'
      dhcpd:    '{{ clone.dhcpd }}'
      bastion:  '{{ clone.bastion }}'

    - { role: hg-etc-com, com: after applying clone role }

  post_tasks:
    - include_role: { name: hg-etc-com }
      vars: { com: 'new node {{ clone.name }} on admin2 via DHCP' }
      delegate_to: '{{ clone.dhcpd }}'


- name: Rename first interface
  hosts: *hosts
  tags: rename-iface

  vars_files:
    - vars/ext/legacy/oxa_networks.yml

  roles:
    - role: if-rename-first
      admin_network: admin2
      admin_network_gw: 10.1.2.248

    - { role: hg-etc-com, com: after applying clone if-rename-first }


- name: Adds ifaces
  hosts: *hosts
  tags: ifaces

  vars_files:

    - vars/passwords.yml
    - vars/ext/ips.yml
    - vars/ext/legacy/oxa_vcenter.yml
    - vars/ext/legacy/oxa_networks.yml
    - vars/ext/clones.json

  vars:
    clone: '{{ oxa_clones[inventory_hostname] }}'

  tasks:
    - { include_role: { name: hg-etc-com }, vars: { com: before applying ifadd role }}

    - include_role: { name: vsphere-if-add }
      with_items:   '{{ clone.networks }}'
      loop_control: { loop_var: net, label: '{{ net }}' }
      name: adds ifaces loop
      vars:
        validate_certs: False
        pysphere:       '{{ clone.pysphere }}'
        network:        '{{ net }}'
        default_gw_net: '{{ clone.default_gw_net }}'

    - { include_role: { name: hg-etc-com }, vars: { com: after applying ifadd role }}


- name: Allocates disks
  hosts: *hosts
  gather_facts: False
  tags: disks

  vars_files:

    - vars/passwords.yml
    - vars/ext/legacy/oxa_vcenter.yml
    - vars/ext/legacy/oxa_vm_default.yml
    - vars/ext/clones.json

  vars:
    clone: '{{ oxa_clones[inventory_hostname] }}'

  tasks:
    - { include_role: { name: hg-etc-com }, vars: { com: before applying diskadd role }}

    - include_role: { name: vsphere-disk-add }
      with_items:   '{{ clone.disks }}'
      loop_control: { loop_var: disk, label: '{{ disk.name }}' }
      name: adds disks loop
      vars:
        validate_certs: False
        pysphere:       '{{ clone.pysphere }}'
        diskpassword:   '{{ luks_password }}'
        unit:           '{{ disk.unit }}'
        device:         '{{ disk.device }}'
        name42:         '{{ disk.name }}'
        size:           '{{ disk.size }}'

    - { include_role: { name: hg-etc-com }, vars: { com: after applying diskadd role }}
