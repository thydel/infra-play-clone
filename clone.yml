#!/usr/bin/env ansible-playbook
---

- name: Check ansible version
  hosts: localhost
  vars: { min_ansible_version: 2.3.0 }
  tags: check-version
  tasks:
    - fail:
        msg: min ansible version is {{ min_ansible_version }}, ansible version is {{ ansible_version.string }}
      when: ansible_version.string | version_compare(min_ansible_version, 'lt')
      check_mode: False
      tags: always

- name: Clone a VM and basic renaming steps
  hosts: &hosts tst5
  gather_facts: False
  tags: clone

  vars_files:
    - vars/passwords.yml
    - vars/ext/legacy/oxa_vcenter.yml
    - vars/ext/legacy/oxa_networks.yml

  roles:
    
    - role: augeas
    - role: clone

      validate_certs: False
      password: '{{ vcenter_password }}'

      template_name: debian8.template13
      template_hostname: debian8

      vm_memory_mb: 1024
      vm_num_cpus: 1

      pysphere: localhost
      dhcpd: super1
      bastion: super1

- name: Rename first interface
  hosts: *hosts
  tags: rename-iface

  vars_files:
    - vars/ext/legacy/oxa_networks.yml

  roles:
    - role: if-rename-first
      admin_network: admin2
      admin_network_gw: 10.1.2.248

- name: Commit clone and rename changes
  hosts: *hosts
  tags: commit-clone

  tasks:
    - include_role: { name: amr-hg-commit }

    - git_config:
        name: user.email
        scope: local
        repo: .
      register: git_config
      delegate_to: localhost

    - hg_commit:
        cwd: /etc
        com: Clone and basic renaming steps
        user: '{{ git_config.config_value }}'
      become: True

- name: Commit DHCP changes
  hosts: super1
  tags: commit-dhcp

  tasks:
    - include_role: { name: amr-hg-commit }

    - git_config:
        name: user.email
        scope: local
        repo: .
      register: git_config
      delegate_to: localhost

    - hg_commit:
        cwd: /etc
        com: new node on admin2 via DHCP
        user: '{{ git_config.config_value }}'
      become: True

- name: Allocate disks
  hosts: *hosts
  gather_facts: False
  tags: disks

- name: Show vaults
  hosts: localhost
  gather_facts: False
  tags: show

  vars_files: [ vars/passwords.yml ]

  tasks:

    - debug: { var: vcenter_password }
    - debug: { var: luks_password }
